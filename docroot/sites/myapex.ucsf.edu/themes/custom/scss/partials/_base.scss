/* Imports */

@import "singularitygs";
@import "breakpoint";

/* Variables */

$tablet-view: 767px;

/* Base Styles */

html {
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    overflow-y: scroll;
}

body {
    font: 100%/1.6 Verdana, Arial, Helvetica, sans-serif;
    color: #333;
}

code, var, kbd, samp, tt, dir, listing, plaintext, xmp, abbr, acronym, blockquote, q {
    hyphens: none;
}

a, a:link, a:visited {
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
}

h1, h2, h3, h4, h5, h6 {
    font-weight: normal;
}

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #deb408;
    margin: 2em 0;
    padding: 0;
    clear: both;
}

img {
    border: 0;
    -ms-interpolation-mode: bicubic;
    vertical-align: middle;
}

li {
    margin-bottom: 10px;
}

p, ol, li {
    font-size: .875em;
    margin-bottom: 10px;
}

a {
    color: #3181ab;
}

h1.site-name {
}

h2 {
    font-size: 1.4em;
    color: #18989B;
    margin-bottom: 10px;
}
.midcol {
    h2 {
        font-size: 1.4em;
        color: #18989B;
        margin-bottom: 10px;

        a {
            font-size: 0.8em;
            color: #333;
        }
    }
    h3 {
        color: #333;
        margin-bottom: 10px;
        font-size: 1.1em;

        a {
            color: #333;
        }

    }
}

#admin-menu .dropdown li {
    font-size: 1em;
}

.page-wrapper {
  max-width: 1080px;
  margin: 0 auto;
}


@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow:inset $top $left $blur $color;
        -moz-box-shadow:inset $top $left $blur $color;
        box-shadow:inset $top $left $blur $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}

@mixin linear-gradient($angle, $start, $ends) {
    $_angle-with-vendor-prefix: "";
    $_angle: "";
    @if $angle == "to top" or $angle == "bottom" {
        $_angle-with-vendor-prefix: bottom;
        $_angle: to top;
    } @else if $angle == "to right" or $angle == "left" {
        $_angle-with-vendor-prefix: left;
        $_angle: to right;
    } @else if $angle == "to bottom" or $angle == "top" {
        $_angle-with-vendor-prefix: top;
        $_angle: to bottom;
    } @else if $angle == "to left" or $angle == "right" {
        $_angle-with-vendor-prefix: right;
        $_angle: to left;
    } @else if $angle == "to top right" or $angle == "bottom left" {
        $_angle-with-vendor-prefix: bottom left;
        $_angle: to top right;
    } @else if $angle == "to bottom right" or $angle == "top left" {
        $_angle-with-vendor-prefix: top left;
        $_angle: to bottom right;
    } @else if $angle == "to bottom left" or $angle == "top right" {
        $_angle-with-vendor-prefix: top right;
        $_angle: to bottom left;
    } @else if $angle == "to top left" or $angle == "bottom right" {
        $_angle-with-vendor-prefix: bottom right;
        $_angle: to top left;
    } @else {
        $_angle-with-vendor-prefix: $angle % 360;
        $_angle: (90 - $angle) % 360;
    }
    background: -webkit-linear-gradient($_angle-with-vendor-prefix, $start, $ends);
    background: -moz-linear-gradient($_angle-with-vendor-prefix, $start, $ends);
    background: -o-linear-gradient($_angle-with-vendor-prefix, $start, $ends);
    background: linear-gradient($_angle, $start, $ends);
}