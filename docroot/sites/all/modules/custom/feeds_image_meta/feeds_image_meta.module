<?php

/**
 * @file
 * On behalf implementation of Feeds mapping API for file.module and
 * image.module.
 *
 * Does actually not include mappers for field types defined in fields module
 * (because there aren't any) but mappers for all fields that contain their
 * value simply in $entity->fieldname['und'][$i]['value'].
 */

/**
 * Implements hook_feeds_processor_targets_alter().
 *
 * @see FeedsNodeProcessor::getMappingTargets().
 */

function feeds_image_meta_feeds_processor_targets_alter(&$targets, $entity_type, $bundle_name) {
  foreach (field_info_instances($entity_type, $bundle_name) as $name => $instance) {
    $info = field_info_field($name);
    if (in_array($info['type'], array('image'))) {

      $targets[$name . ':alt'] = array(
        'name' => check_plain($instance['label']) . ' Alt',
        'callback' => 'feeds_image_alt_feeds_set_target',
        'description' => t('The @label field of the node\'s alt tag metadata.', array('@label' => $instance['label'])),
      );

      $targets[$name . ':title'] = array(
        'name' => check_plain($instance['label']) . ' Title',
        'callback' => 'feeds_image_title_feeds_set_target',
        'description' => t('The @label field of the node\'s title tag metadata.', array('@label' => $instance['label'])),
      );

    }
  }
}

function feeds_image_alt_feeds_set_target($source, $entity, $target, $value) {
  feeds_image_meta_feeds_set_target($source, $entity, $target, $value, 'alt');
} 

function feeds_image_title_feeds_set_target($source, $entity, $target, $value) {
  feeds_image_meta_feeds_set_target($source, $entity, $target, $value, 'title');
}  

function feeds_image_meta_feeds_set_target($source, $entity, $target, $value, $subfield) {
  if (empty($value)) {
    return;
  }

  if (!is_array($value)) {
    $value = array($value);
  }

  list($target) = explode(':', $target);
  $info = field_info_field($target);

  // Iterate over all values.
  $field = isset($entity->$target) ? $entity->$target : array('und' => array());

  $i = 0;
  foreach ($value as $v) {
    if ($info['cardinality'] == $i) {
      break;
    }
    $field['und'][$i][$subfield] = $v;
    $i++;
  }

  $entity->{$target} = $field;
}